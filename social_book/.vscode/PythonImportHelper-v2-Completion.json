[
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "FileExtensionValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "AuthenticationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0001_initial",
        "description": "api.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "api.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0002_user_address_user_age_user_birth_year_and_more",
        "description": "api.migrations.0002_user_address_user_age_user_birth_year_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='user',\n            name='address',\n            field=models.CharField(blank=True, max_length=255, null=True),\n        ),",
        "detail": "api.migrations.0002_user_address_user_age_user_birth_year_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0003_remove_user_city_remove_user_state",
        "description": "api.migrations.0003_remove_user_city_remove_user_state",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0002_user_address_user_age_user_birth_year_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='user',\n            name='city',\n        ),\n        migrations.RemoveField(",
        "detail": "api.migrations.0003_remove_user_city_remove_user_state",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0004_uploadedfile",
        "description": "api.migrations.0004_uploadedfile",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0003_remove_user_city_remove_user_state'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UploadedFile',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=255)),",
        "detail": "api.migrations.0004_uploadedfile",
        "documentation": {}
    },
    {
        "label": "CustomUserAdmin",
        "kind": 6,
        "importPath": "api.admin",
        "description": "api.admin",
        "peekOfCode": "class CustomUserAdmin(UserAdmin):\n    list_display = (\n        'username', 'email', 'full_name', 'gender', 'credit_card_type', \n        'credit_card_number', 'cvc', 'expiration_date', 'public_visibility', \n        'age', 'birth_year', 'address', 'is_staff'\n    )\n    search_fields = ('username', 'email', 'full_name', 'credit_card_number', 'address')\n    ordering = ('username',)\n    fieldsets = (\n        (None, {'fields': ('username', 'password')}),",
        "detail": "api.admin",
        "documentation": {}
    },
    {
        "label": "UploadedFileAdmin",
        "kind": 6,
        "importPath": "api.admin",
        "description": "api.admin",
        "peekOfCode": "class UploadedFileAdmin(admin.ModelAdmin):\n    list_display = ('title', 'visibility', 'cost', 'year_published','uploaded_at')\n    list_filter = ('visibility', 'year_published')\n    search_fields = ('title', 'description')\n    ordering = ('-uploaded_at',)\n    fieldsets = (\n        (None, {\n            'fields': ('title', 'description', 'file', 'visibility', 'cost', 'year_published')\n        }),\n        ('Advanced options', {",
        "detail": "api.admin",
        "documentation": {}
    },
    {
        "label": "ApiConfig",
        "kind": 6,
        "importPath": "api.apps",
        "description": "api.apps",
        "peekOfCode": "class ApiConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'api'",
        "detail": "api.apps",
        "documentation": {}
    },
    {
        "label": "UserRegistrationForm",
        "kind": 6,
        "importPath": "api.forms",
        "description": "api.forms",
        "peekOfCode": "class UserRegistrationForm(forms.ModelForm):\n    password = forms.CharField(\n        label='Password',\n        widget=forms.PasswordInput(attrs={'class': 'form-control', 'type': 'password', })\n    )\n    password2 = forms.CharField(\n        label='Confirm Password',\n        widget=forms.PasswordInput(attrs={'class': 'form-control','type': 'password'})\n    )\n    email = forms.EmailField(",
        "detail": "api.forms",
        "documentation": {}
    },
    {
        "label": "UserLoginForm",
        "kind": 6,
        "importPath": "api.forms",
        "description": "api.forms",
        "peekOfCode": "class UserLoginForm(AuthenticationForm):\n    username = forms.CharField(\n        label='Username',\n        widget=forms.TextInput(attrs={\n            'class': 'form-control form-control-lg', \n            'placeholder': 'Username'\n        })\n    )\n    password = forms.CharField(label='Password', widget=forms.PasswordInput(attrs={'class': 'form-control form-control-lg',\n        'placeholder': '**********'}))",
        "detail": "api.forms",
        "documentation": {}
    },
    {
        "label": "UploadFileForm",
        "kind": 6,
        "importPath": "api.forms",
        "description": "api.forms",
        "peekOfCode": "class UploadFileForm(forms.ModelForm):\n    title = forms.CharField(\n        required=True,\n        label='Title',\n        widget=forms.TextInput(attrs={'class': 'form-control', 'type': 'text'})\n    )\n    description = forms.CharField(\n        required=True,\n        label='Description',\n        widget=forms.Textarea(attrs={'class': 'form-control', 'rows': 5})",
        "detail": "api.forms",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "api.forms",
        "description": "api.forms",
        "peekOfCode": "User = get_user_model()\nclass UserRegistrationForm(forms.ModelForm):\n    password = forms.CharField(\n        label='Password',\n        widget=forms.PasswordInput(attrs={'class': 'form-control', 'type': 'password', })\n    )\n    password2 = forms.CharField(\n        label='Confirm Password',\n        widget=forms.PasswordInput(attrs={'class': 'form-control','type': 'password'})\n    )",
        "detail": "api.forms",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "api.manager",
        "description": "api.manager",
        "peekOfCode": "class UserManager(BaseUserManager):\n    def create_user(self, username, email, password=None, **extra_fields):\n        if not username:\n            raise ValueError('The Username must be set')\n        if not email:\n            raise ValueError('The Email must be set')\n        email = self.normalize_email(email)\n        user = self.model(username=username, email=email, **extra_fields)\n        user.set_password(password)\n        user.save(using=self._db)",
        "detail": "api.manager",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class User(AbstractUser):\n    full_name = models.CharField(max_length=255, blank=True, null=True)\n    gender = models.CharField(max_length=10, choices=[('Male', 'Male'), ('Female', 'Female')], blank=True, null=True)\n    credit_card_type = models.CharField(max_length=50, blank=True, null=True)\n    credit_card_number = models.CharField(max_length=20, blank=True, null=True)\n    cvc = models.CharField(max_length=4, blank=True, null=True)\n    expiration_date = models.DateField(blank=True, null=True)\n    public_visibility = models.BooleanField(default=True)\n    age = models.IntegerField(blank=True, null=True)\n    birth_year = models.IntegerField(blank=True, null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "UploadedFile",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class UploadedFile(models.Model):\n    TITLE_MAX_LENGTH = 255\n    title = models.CharField(max_length=TITLE_MAX_LENGTH)\n    description = models.TextField()\n    file = models.FileField(upload_to='uploads/', \n                            validators=[FileExtensionValidator(['pdf', 'jpeg', 'jpg'])])\n    visibility = models.BooleanField(default=True)  \n    cost = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)\n    year_published = models.IntegerField()\n    uploaded_at = models.DateTimeField(auto_now_add=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "urlpatterns = [\n    path('register/', views.register,name='register'),\n    path('login/', views.user_login,name='login'),\n    path('logout/', views.user_logout,name='logout'),\n    path('authors&sellers/', views.authors_sellers,name='authors&sellers'),\n    path('upload/', views.upload_file,name='upload'),\n]",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 2,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "def register(request):\n    if request.method == 'POST':\n        form = UserRegistrationForm(request.POST)\n        if form.is_valid():\n            try:\n                new_user = form.save(commit=False)\n                new_user.set_password(form.cleaned_data['password'])\n                new_user.save()\n                user = authenticate(username=new_user.username, password=form.cleaned_data['password'])\n                login(request, user)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "user_login",
        "kind": 2,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "def user_login(request):\n    if request.method == 'POST':\n        form = UserLoginForm(data=request.POST)\n        if form.is_valid():\n            username = form.cleaned_data.get('username')\n            password = form.cleaned_data.get('password')\n            print(\"username\", username, \"password\", password)\n            user = authenticate(username=username, password=password)\n            if user is not None:    \n                login(request, user)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "user_logout",
        "kind": 2,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "def user_logout(request):\n    if request.user.is_authenticated:\n        logout(request)\n    return redirect('/')\ndef authors_sellers(request):\n    authors_sellers=User.objects.filter(public_visibility=True)\n    return render(request, 'pages/Authors&Sellers.html',{'authors_sellers':authors_sellers})\ndef upload_file(request):\n    if request.method == 'POST':\n        form = UploadFileForm(request.POST, request.FILES)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "authors_sellers",
        "kind": 2,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "def authors_sellers(request):\n    authors_sellers=User.objects.filter(public_visibility=True)\n    return render(request, 'pages/Authors&Sellers.html',{'authors_sellers':authors_sellers})\ndef upload_file(request):\n    if request.method == 'POST':\n        form = UploadFileForm(request.POST, request.FILES)\n        if form.is_valid():\n            form.save()\n            return redirect('/api/upload')\n    else:",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "upload_file",
        "kind": 2,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "def upload_file(request):\n    if request.method == 'POST':\n        form = UploadFileForm(request.POST, request.FILES)\n        if form.is_valid():\n            form.save()\n            return redirect('/api/upload')\n    else:\n        form = UploadFileForm()\n    return render(request, 'pages/upload_file.html', {'form': form})\ndef uploaded_files(request):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "uploaded_files",
        "kind": 2,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "def uploaded_files(request):\n    files = UploadedFile.objects.all()\n    return render(request, 'pages/uploaded_files.html', {'files': files})",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "social_book.asgi",
        "description": "social_book.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "social_book.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-wn_@)(7^dcxp4bm#2uh7=!x6k7%qdak69g@0#1(4dvl^(8h_&='\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-wn_@)(7^dcxp4bm#2uh7=!x6k7%qdak69g@0#1(4dvl^(8h_&='\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'api',",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'api',\n]   \nMIDDLEWARE = [",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'social_book.urls'",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "ROOT_URLCONF = 'social_book.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "WSGI_APPLICATION = 'social_book.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = '/static/'\nAUTH_USER_MODEL = 'api.User'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = '/static/'\nAUTH_USER_MODEL = 'api.User'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = '/static/'\nAUTH_USER_MODEL = 'api.User'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nMEDIA_ROOT = os.path.join(BASE_DIR, '/media')",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = '/static/'\nAUTH_USER_MODEL = 'api.User'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nMEDIA_ROOT = os.path.join(BASE_DIR, '/media')\nMEDIA_URL = '/media/'",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nAUTH_USER_MODEL = 'api.User'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nMEDIA_ROOT = os.path.join(BASE_DIR, '/media')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'api.User'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nMEDIA_ROOT = os.path.join(BASE_DIR, '/media')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static')\n]\nMEDIA_ROOT = os.path.join(BASE_DIR, '/media')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, '/media')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "social_book.settings",
        "description": "social_book.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "social_book.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "social_book.urls",
        "description": "social_book.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.index, name='index'),\n    path('admin/', admin.site.urls),\n    path('api/', include('api.urls')),\n]\nif settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "social_book.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "social_book.views",
        "description": "social_book.views",
        "peekOfCode": "def index(request):\n    return render(request, 'index.html')",
        "detail": "social_book.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "social_book.wsgi",
        "description": "social_book.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "social_book.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'social_book.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]